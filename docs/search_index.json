[
["index.html", "Tercen Book Preface Why read this book? Structure of the book Acknowledgement Typography conventions Feedback", " Tercen Book Faris Naji, Alexandre Maurel Preface This is a book about the Tercen platform and covers the motivation, design ideas, features, deployment, server administration aspects and roadmap. It is currently a draft and aims to eventually be the definitive guide to Tercen. It is incrementally written and changes often as we are constantly adding to the Tercen project. Why read this book? It is the centralized knowledge of Tercen in a book format. It is intended to be detailed and is aimed for researchers who require an understanding of Tercen. If you require a quick intro to Tercen then we suggest the starters guide. Structure of the book The book has a chapter for each of the tool’s main features. The final chapters contain additional practical information (e.g. server configuration, roadmaps). Acknowledgement We would like to thank all the users for their feedback about Tercen. It has helped us improve Tercen. Typography conventions Important terms and concepts are in bold (e.g. workflow, step, biologist). Any element related to a user interface element is in a code typography (e.g. factor label, ok button). Feedback If you wish to give feedback then please do not hesitate to create an entry in the issue tracker. The book is in a public github repository tercen book, therefore feel free to interact with the repository by cloning, modifying, pushing content. "],
["about-the-authors.html", "About the authors", " About the authors Faris Naji has over ten years experience in trying to remove data barriers in science. Lives in Amsterdam and thinks bikes are the solution to urban living (at least in Europe). Alexandre Maurel has over ten years experience in building high data performance tools. Lives in the south of France and is always on the lookout for a good restaurant. "],
["introduction.html", "Chapter 1 Introduction Motivation Challenges Way forward", " Chapter 1 Introduction Motivation Tercen promotes collaboration for data analysis. Not everyone can code or even wants to, but everyone should benefit from the explosion of data and code currently taking place. Tercen allows non programmers (e.g. biologists) to explore their data and allows programmers (e.g. bioinformaticians) to upload their code (or web-apps) for the biologist to use. By offering this services we believe biologist get empowered and can claim back control of their data. The bioinformatician gets liberated from the operational details and day to day analysis demands from the biologist. This is summed up with the phrase: Tercen empowers the biologist and liberates the bioinformatician. Challenges There are challenges for both the biologist and bioinformatician. Biologist’s challenges: Get control of data Handle large data sizes Reduce analysis time Integrate external databases Visual Interaction Bioinformatician’s challenges: Validate methodologies Improve analysis quality Educate biologists on statistical techniques Reduce time spent on IT support Way forward A new generation of tools and approaches are necessary. TercenCloud aims to be such an approach. TercenCloud is a platform where biologist and bioinformatician work easily together and upload, store and compute data. A more harmonious state between the programmers and non-programmers is achieved using TercenCloud. The main features of TercenCloud are: Generate any visual Visual computation Workflow analysis and customization Integrate external knowledge Sharing analysis Sharing data Results reporting Project centric analysis Data provenance Add operators or apps (i.e. plug-ins) Programmatic access (Tercen API) Cloud hosted or on-site Zero install For a deeper understanding about TercenCloud read the next chapter and consult the specific chapter on a particular feature. "],
["tercen-features.html", "Chapter 2 Tercen features", " Chapter 2 Tercen features Here is an overview of Tercen features. Each feature has its own chapter. Generate any visual A researcher configures any graphical view (e.g. heatmaps, plots, time series, kinetic time series and parallel co-ordinates, pairwise scatter plots). Refer to chapter 4. Visual computation A researcher defines a computation (e.g. mean, ANOVA, Mixed-Model, count) visually and in so doing defines a new computation. Process any large numeric data: Researcher can upload and process any type of large numerical data (e.g. genomic, flow cytometry, proteomic). Refer to chapter 5. Workflow analysis and customization A researcher visually customizes a workflow. A workflow is a pipeline data analysis composed of a sequence of computation and annotation steps. There are standard workflows for each of molecular readouts (e.g. RNAseq, flowCyto, mass-spectroscopy spectra). Refer to chapter 6. Integrate external knowledge A researcher integrates extra data from external data or knowledge sources (e.g. biological database). Refer to chapter 7. Sharing analysis A researcher shares the workflow and data via an URL and both researcher and bioinformatician can collaborate on the same workflow and data at the same time. Refer to chapter 8. Sharing data A researcher shares the measurement and computed data via URL to other parties. Raw measurement data or newly analysed data is shareable to any users with internet. Refer to chapter 9. Results reporting A researcher generates an extensive report on the complete workflow for collaborators, presentations or publication. The report contains not only the conclusions but an automatically generated formal description of the complete process (e.g. normalization, statistics testing, clustering, functional annotation). This is essential for reproducible science. Refer to chapter 10. Project centric analysis Science is project orientated and a researcher centralizes all the data, workflow and visuals in one project and easily sets access control. Refer to chapter 11. Data provenance A researcher traces any computed value back to the initial measurement. Refer to chapter 12. Add operators or apps (i.e. plug-ins) A researcher easily adds powerful computation or visualization plug-ins. These plugins are developed by the bioinformatician and transmitted via the TercenCloud platform. Plug-ins are computation or visualization modules (e.g. vsn normalization, ANOVA, PCA, MDS, Mixed Models, and clustering). Refer to chapter 13. Programmatic access Bioinformaticians accesses and manipulates the analysis and components through their favorite programming environment (e.g. R, RShiny, Python, Matlab and Javascript). Refer to chapter 14. Cloud hosted or on-site A researcher shares the complete process via a secure internet connection to secure cloud service, all computation resources (CPU, RAM and hard disk) are dynamically allocated to the researcher. Tercen is also available for onsite deployment. Refer to chapter 15 and chapter 16. Zero install A researcher immediately starts performing analysis using a browser on any device without the aid of an IT administration. Refer to chapter 15. "],
["concepts.html", "Chapter 3 Concepts", " Chapter 3 Concepts The important concepts of Tercen are covered in this chapter. The concepts help in the understanding the logic behind Tercen. It allows users to visual interact and define a projection for visualization and computation. For those readers who are interested, these projection are in fact using relational algebra. Even though the data used for the projection may be from different tables, the user sees only one table (called the universal table). "],
["visualization.html", "Chapter 4 Visualization", " Chapter 4 Visualization The cross-tab view in the data step allows the researchers to create any visual by drag-n-dropping factors into one of six zones. row zone column zone x-axis zone y-axis zone color zone label zone The type of visualization is determine by what is configured (or pre-configured) Here are a few examples: Heatmap column, row, color, heatmap Multigrup Pairwise Plot Profiles Bar Plot Single Scatter Plot Maps "],
["visual-computation.html", "Chapter 5 Visual computation", " Chapter 5 Visual computation An outline of how flexible and interactable a visualizaton is constructed with the projections in the cross-tab. A projection is also a computation in what we call WYSIWYG, W hat You See Is What You Get. Every view is potentially a computation. You require to select an operator to compute on the choosen projection. Note: Some operators requrie a specific projection e.g. a PCA requires to have observations on the columns and variables on the rows. "],
["workflow-and-steps.html", "Chapter 6 Workflow and Steps", " Chapter 6 Workflow and Steps A workflow consists of a series of steps.Each step is explained below. Table step Allows a researcher to define a dataset. The dataset requires to be uploaded to Tercen before it is visible in the Table step. Data step Allows a researcher to create a projection for visualization and computation. Gather step Allows a researcher to gather many factors into one factor. Join left step Allows a researcher to link to external data. Join right step Allows a researcher to link to external data. Query Data step Allows a researcher to perform a project without a computation. External View Data step Allows a researcher to connect to an external web apps (i.e. shiny app). Wizard step Maps the factors in your workflow with what is in the data. Input step Used as the first step in an app workflow. Output step Used as the last step in an app workflow. "],
["external-databases.html", "Chapter 7 External databases", " Chapter 7 External databases Researchers require to add extra information into their data analysis. This is usually extra annotation or even data from an external source (i.e. database). This is effectively a join between two data sets. The data step called join left and join right are used for this. The extra data requires to be uploaded first. This is done using the standard method of uploading to Tercen. A common key or keys are required to join the two data sets. Once joined the extra annotations or data are available for any succeeding step. "],
["sharing-analysis.html", "Chapter 8 Sharing analysis", " Chapter 8 Sharing analysis All entities in Tercen, i.e. data, steps, views, workflows, groups, projects are shared via a permanent URL. If sharing a URL is not possible for whatever reasons then a researcher exports a workflow as zip file. This zip file is sent to the other researchers which imports the workflows. "],
["sharing-data.html", "Chapter 9 Sharing data", " Chapter 9 Sharing data All entities in Tercen, i.e. data, steps, views, workflows, groups, projects are shared via a permanent URL. If sharing a data URL is not possible for whatever reasons then a researcher downloads data from any of the steps in the workflow. "],
["results-reporting.html", "Chapter 10 Results reporting", " Chapter 10 Results reporting The ability to publish results for scientific journals or even group presentation is key. The current version of beta is implementing a high quality image output. Any data step allows the researcher to export a high quality visual for reports. The final release of Tercen is targeted to have a full reporting subsystem in order to convert workflows into reports. "],
["projects.html", "Chapter 11 Projects", " Chapter 11 Projects The concept of a project is fundamental in Tercen. The project determines what group members work on. Data and workflows are created within a project. Without a project a researcher cannot upload data or create a workflow. "],
["data-provenance.html", "Chapter 12 Data provenance", " Chapter 12 Data provenance Data provenance allows researchers to take a computed value and trace back to the original data sources to investigate how a value was computed. This is a fundamental aspect of reproducible science. The data model of Tercen is fundamentally built on data relationships and therefore has data provenance built into it. In the final version of Tercen we aim to offer researchers the ability to interrogate any value and show the full computed trace stack for it. "],
["operators.html", "Chapter 13 Operators and Apps App library Structure of an operator Tercen R package", " Chapter 13 Operators and Apps Tercen operators perform the computation on the projection views. An operator performs a computation on one projection. An app is a mini workflow allow a user to perform a computation or visualization. There are many existing operators but it is easy to create your own operator. Using the data step, a user creates a projection and selects an operator. A data projection is composed of a data, y-axis, x-axis, rowseq, colseq, color and label. All these projection parameter are presented by data structures to the operator. App library All Tercen operators and apps are on tercen github. The contents of the app library are found in a json file in github app library The operators and apps are also found on the Tercen github area, see (https://github.com/tercen) Structure of an operator A Tercen operator is composed of three main activities: Getting the data Operating on the data Returning the results The data is contained in each data step. Each data step contain the data in three main tables: Row table Column table Cross-tab table Each table contains different data as a result of the definition of the cross-tab projection. The cross-tab Table contains the following important columns, as examples: .ri row index of data, represented by an integer .ci col index of data, represented by an integer Tercen R package There is currently an R package in the tercen repository to help in creating operators called teRcen "],
["programmatic-access.html", "Chapter 14 Programmatic access", " Chapter 14 Programmatic access The teRcen R package on the tercen github allows complete programmatic control. Any functionality available graphically in Tercen is also available pro grammatically. This includes, for example: uploading data computing data creating groups and users creating projects creating workflows and operators For the full API please refer to the teRcen R package "],
["deployment.html", "Chapter 15 Deployment 15.1 Cloud 15.2 On-site", " Chapter 15 Deployment Deployment is the manner in which Tercen is delivered to the researchers. Currently is available in two major deliveries: cloud and on-site. Each type is expained below with a brief description of some of the flavours available. 15.1 Cloud When Tercen is running on servers in a remote data center, we consider this to cloud. There is the a public version available Tercen called TercenCloud. A private TercenCloud is also available. Public Cloud The tercen cloud is found at: (www.tercen.com). Currently the cloud is running the alpha version of tercen. Private Cloud The tercen cloud private is tercen running on private servers on the cloud. These servers may be Amazon web services, for example. It is available on request to info@tercen.com 15.2 On-site The tercen on-site requires an install and is available by sending an email to info@tercen.com. Currently the on-site version are the beta version of tercen. Desktop on-site The desktop version is for a local on-site install on a user’s machine. This version is still capable of being a server to a group of users. Server on-site The server version is for a on-site server install. Cluster on-site The cluster version is for a high availability on-site server install. "],
["server.html", "Chapter 16 Running a server Server resources", " Chapter 16 Running a server If you require the on-site version of Tercen then send an email to info@tercen.com. Currently the on-site versions is the beta of Tercen. Server resources A Tercen server allows for multiple researchers using the same server. Each researcher is using CPU and Storage resources. A server may be easily swamped with requests and therefore a system of resource management is in place. There are different categories (i.e. CPU, Data, Storage, API calls) of resources and different levels of utilization (i.e. 0,1,2) where 0 represents the lowest level of resource utilization. Ideally the right level of resources should be assigned for different users. A researcher who exceeds their limit gets an error. A resource utilization information bar is shown to each user in the graphical user interface. The bar indicates the level of resource utilization and the amount left. Server resources are configured using config.yaml file. Go to the folder named resources\\tercen in the Tercen installation folder (usually C:\\Tercen), in it there is a file called config.yaml. The file contains three profile levels: 0,1,2 Each user is associated with one of the levels. The default is 0 (the lowest level of resource allocation). Level Resource 0 Low amount of resources 1 Medium amount of resources 2 Highest amount of resources There are settings associated for each level for each category of resources. The current categories are: Category Description Name in yaml file Table resource for table (i.e. size) TableProfile CPU time resources for cpu time CputimeProfile Storage resources for storage StorageProfile Run resources for a run RunProfile API calls resources fro the API ApiCallProfile Increasing the value for any of these settings gives extra resources. If you change these profile settings then you need to restart the Tercen application for your changes to take effect. "],
["getting-started.html", "Chapter 17 Getting started", " Chapter 17 Getting started Here are some ideas: Try the starters guide Try to code for different operators using the teRcen R package, Note when using R Studio it will auto complete when you type the methods on the tercen client and tercen query object. Give feedback on this starter’s guide by creating an issue Give feedback on Tercen by sending an email to info@tercen.com Contact us for a one-2-one session "],
["known-issues.html", "Chapter 18 Known issues", " Chapter 18 Known issues Alpha known issues: By default users are not allowed to create operators unless explicitly given permission by a Tercen administrator Cannot perform an operator on multi pairwise projections If your local computer’s date and clock time is not the same as the Tercen server then you may get delays and errors Cannot run python scripts Beta known issues: The beta version of Tercen is currently being tested. "],
["roadmap.html", "Chapter 19 Roadmap", " Chapter 19 Roadmap Tercen is complex software and requires to built up in stages with constant feedback. The alpha version allows for testing the value proposition and the feature list. The beta and final are about up-scaling. alpha Released on: start of 2016 beta Released on: start of 2017 New server application, called Tercen_Server(beta) Easy one button installation New app store (on github) Ability to import/export workflows New admin menu Improved user management New resource management (for CPU and Disk) Upgraded user interface New GUI, and browser New data table views New progress bars New logs Improved performance Github integration (for R code) New R code package management New full programmatic access to Tercen New Tercen R package, called teRcen final Scheduled for mid 2018 "],
["glossary.html", "Chapter 20 Glossary", " Chapter 20 Glossary Measurement: A numerical variable Observation: An observation is the factor name given to a value (measurement), at a particular period, of a particular variable. Variable: A variable is a characteristic of a unit being observed that may assume more than one of a set of values to which a numerical measure or a category from a classification can be assigned (e.g. income, age, weight, etc., and “occupation”, “industry”, “disease”, etc. Cross-tab: Projection: Long format: Wide format: App: Workflow: "]
]
